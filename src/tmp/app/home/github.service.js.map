{"version":3,"sources":["app/home/github.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAqB,eAAe,CAAC,CAAA;AAErC,mBAAyB,SAAS,CAAC,CAAA;AAGnC;IAEI,6BAAqB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAEnC,yCAAW,GAAX,UAAY,QAAQ,EAAE,UAAU;QAC5B,mFAAmF;QACnF,MAAM,CAAC,4DAA0D,QAAQ,cAAS,UAAY,CAAC,CAAC,uBAAuB;IAC3H,CAAC;IAED,6CAAe,GAAf;QACI,MAAM,CAAC,mCAAmC,CAAC;IAC/C,CAAC;IAED,6CAAe,GAAf;QACI,MAAM,CAAC,yIAAyI,CAAC;IACrJ,CAAC;IAED,gDAAkB,GAAlB,UAAoB,QAAQ,EAAE,UAAU;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;aAC3C,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;aACpB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAED,6CAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;aAC3B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;aACnB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAED,6CAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;aACnC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;aACxB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAEO,4CAAc,GAAtB,UAAuB,QAAQ;QAC3B,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IACjC,CAAC;IAEO,uCAAS,GAAjB,UAAkB,IAAI;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEO,wCAAU,GAAlB,UAAmB,QAAQ;QACvB,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC3B,MAAM,CAAC,IAAI,IAAI,EAAG,CAAC;IACvB,CAAC;IAEO,yCAAW,GAAnB,UAAqB,KAAK;QACtB,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;YAC5C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QACxE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,eAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAvDL;QAAC,iBAAU,EAAE;;2BAAA;IA0Db,0BAAC;AAAD,CAzDA,AAyDC,IAAA;AAzDY,2BAAmB,sBAyD/B,CAAA","file":"app/home/github.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport {Observable} from 'rxjs/Rx';\n\n@Injectable() \nexport class GithubSearchService {\n    \n    constructor (private http: Http) {}\n\n    formRepoUrl(language, pageNumber) {\n        // return `https://api.github.com/users/${username}/repos`; // Tempate strings yay!\n        return `https://api.github.com/search/repositories?q=+language:${language}&page=${pageNumber}`; // Tempate strings yay!\n    }\n\n    getRateLimitUrl() {\n        return \"https://api.github.com/rate_limit\";\n    }\n\n    langaugeTagsUrl() {\n        return \"https://gist.githubusercontent.com/mayurah/5a4d45d12615d52afc4d1c126e04c796/raw/ccbba9bb09312ae66cf85b037bafc670356cf2c9/languages.json\";\n    }\n\n    getReposByUsername (language, pageNumber): Observable<any> {\n        return this.http.get(this.formRepoUrl(language, pageNumber))\n                        .map(this.parseRepos)\n                        .catch(this.handleError);\n    }\n\n    getLanguageTags() {\n        return this.http.get(this.langaugeTagsUrl())\n                        .map(this.parseTags)\n                        .catch(this.handleError);\n    }\n\n    getApiRateLimit() {\n        return this.http.get(this.getRateLimitUrl())\n                .map(this.parseRateLimit)\n                .catch(this.handleError);\n    }\n\n    private parseRateLimit(response) {\n        let body = response.json();\n        return body.resources.search;\n    }\n\n    private parseTags(tags) {\n        return tags.json();\n    }\n\n    private parseRepos(response) {\n        let body = response.json();\n        return body || { };\n    }\n\n    private handleError (error) {\n        let errMsg = (error.message) ? error.message :\n        error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n    \n}\n"],"sourceRoot":"/source/"}