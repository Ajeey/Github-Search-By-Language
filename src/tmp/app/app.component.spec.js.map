{"version":3,"sources":["app/app.component.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wBAIO,uBAAuB,CAAC,CAAA;AAE/B,wBAAqC,2BAA2B,CAAC,CAAA;AACjE,qBAA0B,eAAe,CAAC,CAAA;AAC1C,8BAA6B,iBAAiB,CAAC,CAAA;AAO/C;IAAA;IACA,CAAC;IAND;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,wCAAwC;YAClD,UAAU,EAAE,CAAC,4BAAY,CAAC;SAC7B,CAAC;;qBAAA;IAEF,oBAAC;AAAD,CADA,AACC,IAAA;AAED,QAAQ,CAAC,cAAc,EAAE;IACrB,IAAI,GAAG,CAAC;IAER,UAAU,CAAC;QACP,GAAG,GAAG,IAAI,4BAAY,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,eAAK,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EACvD,UAAC,GAAyB;QACtB,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,OAAwC;YACzE,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC;YAClD,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC;IAEL,EAAE,CAAC,+BAA+B,EAAE;QAChC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"app/app.component.spec.js","sourcesContent":["import {\n    async,\n    inject,\n    ComponentFixture\n} from '@angular/core/testing';\n\nimport { TestComponentBuilder } from '@angular/compiler/testing';\nimport { Component } from '@angular/core';\nimport { AppComponent } from './app.component';\n\n@Component({\n    selector: 'as-main-test',\n    template: '<div><as-main-app></as-main-app></div>',\n    directives: [AppComponent]\n})\nclass TestComponent {\n}\n\ndescribe('AppComponent', () => {\n    let app;\n\n    beforeEach(() => {\n        app = new AppComponent();\n    });\n\n    it('should be present', async(inject([TestComponentBuilder],\n        (tsb: TestComponentBuilder) => {\n            tsb.createAsync(TestComponent).then((fixture: ComponentFixture<TestComponent>) => {\n                fixture.detectChanges();\n                let compiled = fixture.debugElement.nativeElement;\n                expect(compiled).toBeDefined();\n            });\n    })));\n\n    it('should have appBrand property', function() {\n        expect(app.appBrand).toBe('TopGit');\n    });\n});\n\n"],"sourceRoot":"/source/"}